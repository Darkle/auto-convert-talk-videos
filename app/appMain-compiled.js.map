{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/appMain.lsc","webpack:///./app/ffmpeg.lsc","webpack:///./app/logging.lsc","webpack:///./app/utils.lsc","webpack:///external \"child_process\"","webpack:///external \"chokidar\"","webpack:///external \"crypto\"","webpack:///external \"del\"","webpack:///external \"folktale/maybe\"","webpack:///external \"lodash\"","webpack:///external \"path\"","webpack:///external \"winston\"","webpack:///external \"winston-daily-rotate-file\""],"names":["chokidar","watch","dirToWatch","ignored","persistent","awaitWriteFinish","ignoreInitial","watcher","on","shouldConvertVideo","filePath","Maybe","Nothing","endsWith","includes","process","logger","error","speed","conversionInProgress","info","path","basename","queue","push","length","generateFFmpegParams","spawnedFFmpeg","stderr","noop","stdout","cleanUpAndStartNewVideoConversion","lowerFFmpegProcessPriority","pid","exitCode","deleteOriginalFile","shift","convertVideo","belowNormalProcessPriorityId","srcFilePath","extname","fileBaseName","slice","lastIndexOf","fileExtension","join","outputPath","outputFileName","ffmpegDefaultParams","generateOutputFilePath","origFilePath","then","catch","addFileToConversionQueue","winston","transports","DailyRotateFile","filename","dirname","datePattern","maxSize","maxFiles","fileTransport","Console","createLogger","level","format","prettyPrint","crypto","randomBytes","toString","uniqueString","obj","_","get","Just","prop","MaybeGetPath","getUniqueString"],"mappings":"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","file":"appMain-compiled.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/appMain.lsc\");\n","import chokidar from 'chokidar'\r\nimport Maybe from 'folktale/maybe'\r\n\r\nimport { dirToWatch } from '../config.json'\r\nimport { addFileToConversionQueue, convertVideo } from './ffmpeg.lsc'\r\nimport { logger } from './logging.lsc'\r\nimport { getUniqueString } from './utils.lsc'\r\n\r\nwatcher = chokidar.watch(dirToWatch, {\r\n  ignored: /(^|[\\/\\\\])\\../, // ignore dotfiles\r\n  persistent: true,\r\n  awaitWriteFinish: true,\r\n  ignoreInitial: true,\r\n})\r\n\r\nwatcher\r\n  .on('add', filePath ->\r\n    if !shouldConvertVideo(filePath): return Maybe.Nothing()\r\n    addFileToConversionQueue(filePath)\r\n    convertVideo()\r\n  )\r\n\r\n/*****\r\n* The file will have .part or .dashVideo or .dashAudio if it's a jDownloader download,\r\n* so we need to ignore that until the download completes.\r\n*\r\n* We also need to check for a unique string, becuase once ffmpeg has finished converting,\r\n* the new converted file shows up which triggers the watcher. So we need to ignore the new\r\n* converted file as its already converted.\r\n*/\r\nshouldConvertVideo(filePath:string):boolean ->\r\n  !filePath.endsWith('.part') &&\r\n    !filePath.endsWith('.dashVideo') &&\r\n    !filePath.endsWith('.dashAudio') &&\r\n    !filePath.includes(getUniqueString())\r\n\r\nprocess.on('unhandledRejection', logger.error)\r\nprocess.on('uncaughtException', logger.error)\r\n","import { spawn } from 'child_process'\r\nimport path from 'path'\r\n\r\nimport Maybe from 'folktale/maybe'\r\nimport del from 'del'\r\n\r\nimport { logger } from './logging.lsc'\r\nimport { noop, getUniqueString } from './utils.lsc'\r\nimport { speed, dirToWatch as outputPath } from '../config.json'\r\n\r\n// https://docs.microsoft.com/en-us/windows/desktop/CIMWin32Prov/setpriority-method-in-class-win32-process\r\nbelowNormalProcessPriorityId = 16384\r\nffmpegDefaultParams = [\r\n  '-filter:v',\r\n  `setpts=PTS/${ speed }`,\r\n  '-filter:a',\r\n  `atempo=${ speed }`,\r\n  `-threads`,\r\n  `1`,\r\n]\r\nqueue = []\r\nlet conversionInProgress = false  // eslint-disable-line fp/no-let\r\n\r\naddFileToConversionQueue(filePath:string):Maybe ->\r\n  logger.info(`${ path.basename(filePath) } has been added to convert queue.`)\r\n  queue.push(filePath)\r\n  Maybe.Nothing()\r\n\r\nconvertVideo():Maybe ->\r\n  if !conversionInProgress && queue.length > 0:\r\n    logger.info(`Converting ${ path.basename(queue[0]) }`)\r\n    now conversionInProgress = true   // eslint-disable-line fp/no-mutation\r\n    spawnedFFmpeg = spawn('ffmpeg', generateFFmpegParams(queue[0]))\r\n    /*****\r\n    * For some reason if you omit the stderr/stdout listeners sometimes ffmpeg\r\n    * wont exit properly. ¯\\_(ツ)_/¯\r\n    */\r\n    spawnedFFmpeg.stderr.on('data', noop)\r\n    spawnedFFmpeg.stdout.on('data', noop)\r\n    spawnedFFmpeg.on('exit', cleanUpAndStartNewVideoConversion)\r\n    lowerFFmpegProcessPriority(spawnedFFmpeg.pid)\r\n\r\n  Maybe.Nothing()\r\n\r\ncleanUpAndStartNewVideoConversion(exitCode:number):Maybe ->\r\n  logger.info(`spawnedFFmpeg exited with code ${ exitCode }`)\r\n  logger.info(`Finished converting ${ path.basename(queue[0]) }`)\r\n  deleteOriginalFile(queue[0])\r\n  queue.shift()\r\n  now conversionInProgress = false   // eslint-disable-line fp/no-mutation\r\n  convertVideo()\r\n  Maybe.Nothing()\r\n\r\n/*****\r\n* Based on https://github.com/soyuka/renice/blob/master/index.js\r\n*/\r\nlowerFFmpegProcessPriority(pid:number) ->\r\n  spawn(\r\n    'cmd.exe',\r\n    [\r\n      '/c',\r\n      `wmic process where processid=${ pid } CALL setpriority ${ belowNormalProcessPriorityId }`,\r\n    ]\r\n  )\r\n  Maybe.Nothing()\r\n\r\ngenerateOutputFilePath(srcFilePath:string):string ->\r\n  fileBaseName = path.basename(srcFilePath)\r\n  fileExtension = path.extname(fileBaseName)\r\n  outputFileName = fileBaseName.slice(0, fileBaseName.lastIndexOf(fileExtension)) +\r\n    `-converted-${ getUniqueString() }` + fileExtension\r\n\r\n  path.join(outputPath, outputFileName)\r\n\r\ngenerateFFmpegParams(srcFilePath:string):Array<string> ->\r\n  [\r\n    '-i',\r\n    srcFilePath,\r\n    ...ffmpegDefaultParams,\r\n    generateOutputFilePath(srcFilePath, getUniqueString())\r\n  ]\r\n\r\ndeleteOriginalFile(origFilePath:string):Maybe ->\r\n  del([origFilePath])\r\n    .then(()-> logger.info(`Deleted orignal ${ path.basename(origFilePath) } file`))\r\n    .catch(logger.error)\r\n  Maybe.Nothing()\r\n\r\nexport {\r\n  convertVideo,\r\n  addFileToConversionQueue,\r\n}\r\n","import winston from 'winston'\r\nimport 'winston-daily-rotate-file'\r\n\r\nfileTransport = new (winston.transports.DailyRotateFile)({\r\n  filename: 'auto-convert-talk-videos-%DATE%.log',\r\n  dirname: 'logs'\r\n  datePattern: 'YYYY-MM-DD-HH',\r\n  maxSize: '20m',\r\n  maxFiles: 5\r\n})\r\n\r\ntransports = [\r\n  fileTransport,\r\n]\r\n\r\nif ISDEV: transports.push(new winston.transports.Console())\r\n\r\nlogger = winston.createLogger({\r\n  level: 'info',\r\n  format: if ISDEV: winston.format.prettyPrint() else: winston.format.json()\r\n  transports\r\n})\r\n\r\nexport {\r\n  logger\r\n}\r\n","import crypto from 'crypto'\r\n\r\nimport Maybe from 'folktale/maybe'\r\nimport _ from 'lodash'\r\n\r\nuniqueString = crypto.randomBytes(6).toString('hex')\r\ngetUniqueString():string -> uniqueString\r\n\r\nMaybeGetPath<T>(obj:T={}, path:string):Maybe ->\r\n  prop = _.get(obj, path)\r\n  prop ? Maybe.Just(prop) : Maybe.Nothing()\r\n\r\nnoop() -> Maybe.Nothing()\r\n\r\nexport{\r\n  MaybeGetPath,\r\n  noop,\r\n  getUniqueString,\r\n}\r\n","module.exports = require(\"child_process\");","module.exports = require(\"chokidar\");","module.exports = require(\"crypto\");","module.exports = require(\"del\");","module.exports = require(\"folktale/maybe\");","module.exports = require(\"lodash\");","module.exports = require(\"path\");","module.exports = require(\"winston\");","module.exports = require(\"winston-daily-rotate-file\");"],"sourceRoot":""}